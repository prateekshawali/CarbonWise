{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ruthvika B\\\\OneDrive\\\\Documents\\\\coding\\\\CarbonProject\\\\auth-mern-app\\\\frontend\\\\src\\\\pages\\\\Proj.js\",\n  _s = $RefreshSig$();\n// \n\nimport { useEffect, useState } from 'react';\n\n// components\nimport ProjectDetails from './ProjectDetails';\nimport ProjectForm from './ProjectForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Proj = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    const fetchProjects = async () => {\n      const response = await fetch('http://localhost:8080/api/projects'); //or change it back to /api/projects if the whole localhost link doesnt work\n      const json = await response.json();\n      if (response.ok) {\n        setProjects(json);\n      }\n    };\n    fetchProjects();\n  }, []);\n\n  //   return (\n  //     <div className=\"home\">\n  //       <div className=\"project\">\n  //         {project.length > 0 && project.map((projects) => (\n  //           <ProjectDetails key={projects._id} projects={projects} />\n  //         ))}\n  //       </div>\n\n  //     </div>\n  //   );\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects\",\n      children: projects.length > 0 ? projects.map(projects => /*#__PURE__*/_jsxDEV(ProjectDetails, {\n        projects: projects\n      }, projects._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No projects available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ProjectForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this);\n};\n_s(Proj, \"TSrpuQX6QU8EgjQSxaAzj2u9i4o=\");\n_c = Proj;\nexport default Proj;\nvar _c;\n$RefreshReg$(_c, \"Proj\");","map":{"version":3,"names":["useEffect","useState","ProjectDetails","ProjectForm","jsxDEV","_jsxDEV","Proj","_s","projects","setProjects","fetchProjects","response","fetch","json","ok","className","children","length","map","_id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ruthvika B/OneDrive/Documents/coding/CarbonProject/auth-mern-app/frontend/src/pages/Proj.js"],"sourcesContent":["// \r\n\r\nimport { useEffect, useState } from 'react';\r\n\r\n// components\r\nimport ProjectDetails from './ProjectDetails';\r\nimport ProjectForm from './ProjectForm';\r\n\r\nconst Proj = () => {\r\n  const [projects, setProjects] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchProjects = async () => {\r\n      const response = await fetch('http://localhost:8080/api/projects'); //or change it back to /api/projects if the whole localhost link doesnt work\r\n      const json = await response.json();\r\n\r\n      if (response.ok) {\r\n        setProjects(json);\r\n      }\r\n    };\r\n\r\n    fetchProjects();\r\n  }, []);\r\n\r\n//   return (\r\n//     <div className=\"home\">\r\n//       <div className=\"project\">\r\n//         {project.length > 0 && project.map((projects) => (\r\n//           <ProjectDetails key={projects._id} projects={projects} />\r\n//         ))}\r\n//       </div>\r\n      \r\n//     </div>\r\n//   );\r\n// };\r\n\r\nreturn (\r\n  <div className=\"home\">\r\n    <div className=\"projects\">\r\n      {projects.length > 0 ? (\r\n        projects.map((projects) => (\r\n          <ProjectDetails key={projects._id} projects={projects} />\r\n        ))\r\n      ) : (\r\n        <p>No projects available.</p>\r\n      )}\r\n    </div>\r\n    <ProjectForm />\r\n  </div>\r\n);\r\n};\r\n\r\nexport default Proj;"],"mappings":";;AAAA;;AAEA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAE3C;AACA,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC,CAAC,CAAC;MACpE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,CAAC,CAAC;MAElC,IAAIF,QAAQ,CAACG,EAAE,EAAE;QACfL,WAAW,CAACI,IAAI,CAAC;MACnB;IACF,CAAC;IAEDH,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;;EAER;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,oBACEL,OAAA;IAAKU,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBX,OAAA;MAAKU,SAAS,EAAC,UAAU;MAAAC,QAAA,EACtBR,QAAQ,CAACS,MAAM,GAAG,CAAC,GAClBT,QAAQ,CAACU,GAAG,CAAEV,QAAQ,iBACpBH,OAAA,CAACH,cAAc;QAAoBM,QAAQ,EAAEA;MAAS,GAAjCA,QAAQ,CAACW,GAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuB,CACzD,CAAC,gBAEFlB,OAAA;QAAAW,QAAA,EAAG;MAAsB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC7B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACNlB,OAAA,CAACF,WAAW;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAER,CAAC;AAAChB,EAAA,CA1CID,IAAI;AAAAkB,EAAA,GAAJlB,IAAI;AA4CV,eAAeA,IAAI;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}